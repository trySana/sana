name: Full CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          backend:
            - 'backend/**'
          frontend:
            - 'frontend/**'

  backend-ci:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirement-dev.txt
    - name: Run backend tests
      run: |
        cd backend
        pytest --cov=. --cov-report=term-missing
    - name: Lint backend
      run: |
        cd backend
        black --check .
        flake8 .

  frontend-ci:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
        cache-dependency-path: frontend/pnpm-lock.yaml
    - name: Install pnpm
      run: npm install -g pnpm
    - name: Install dependencies
      run: |
        cd frontend
        pnpm install --frozen-lockfile
    - name: Build frontend
      run: |
        cd frontend
        pnpm build

  deploy:
    needs: [backend-ci, frontend-ci]
    if: always() && (needs.backend-ci.result == 'success' || needs.backend-ci.result == 'skipped') && (needs.frontend-ci.result == 'success' || needs.frontend-ci.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
    - name: Deploy notification
      run: echo "ðŸš€ Ready for deployment!"
